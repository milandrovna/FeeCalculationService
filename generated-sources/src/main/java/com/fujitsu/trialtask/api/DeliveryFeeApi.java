/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.12.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.fujitsu.trialtask.api;

import com.fujitsu.trialtask.dto.ErrorResponseDto;
import com.fujitsu.trialtask.dto.FeeDto;
import java.util.Map;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.12.0")
@Validated
public interface DeliveryFeeApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /fee : Returns delivery fee
     * Calculates the delivery fee based on the provided location and delivery transport type. 
     *
     * @param location Delivery location (required)
     * @param deliveryTransport Delivery transport type (required)
     * @return Successful response with calculated delivery fee. (status code 200)
     *         or Bad request (invalid parameters). (status code 400)
     *         or Internal server error. (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/fee",
        produces = { "application/json" }
    )
    
    default ResponseEntity<FeeDto> getFee(
        @NotNull  @Valid @RequestParam(value = "location", required = true) String location,
        @NotNull  @Valid @RequestParam(value = "deliveryTransport", required = true) String deliveryTransport
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"amount\" : 0.8008282, \"currency\" : \"EUR\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"error\" : \"Invalid location provided.\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
